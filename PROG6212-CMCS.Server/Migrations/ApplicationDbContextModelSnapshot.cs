// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROG6212_CMCS.Server.Data;

#nullable disable

namespace PROG6212_CMCS.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("LecturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClaimId");

                    b.HasIndex("LecturerId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.ClaimApproval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ApproverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClaimId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<int>("Decision")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApprovalId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimApprovals");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BankDetails")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LecturerId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            AccessLevel = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            AccessLevel = 2,
                            RoleName = "AcademicManager"
                        },
                        new
                        {
                            RoleId = 3,
                            AccessLevel = 3,
                            RoleName = "ProgrammeCoordinator"
                        },
                        new
                        {
                            RoleId = 4,
                            AccessLevel = 4,
                            RoleName = "Lecturer"
                        });
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.SupportingDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClaimId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("DocumentId");

                    b.HasIndex("ClaimId");

                    b.ToTable("SupportingDocuments");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@cmcs.com",
                            Name = "System Admin",
                            PasswordHash = "$2a$11$BXTCPkB68w94H7eZTuYyh.Te6j2gZP6QYFNyo/ptDiD9sMqzEtCxC",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "manager@cmcs.com",
                            Name = "Academic Manager",
                            PasswordHash = "$2a$11$qVmDE.1A8Z95oeBeGrr6megTbyCRMxKS9qgS1Xd.VvMz0CuWq69Ni",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Email = "coordinator@cmcs.com",
                            Name = "Programme Coordinator",
                            PasswordHash = "$2a$11$arMByAF8wsVQFfFhwGVpEODIasrvmbfoW2X0bMVPX9FmPqu1Hv//y",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            Email = "lecturer@cmcs.com",
                            Name = "Lecturer",
                            PasswordHash = "$2a$11$97Wcs4uEFYlR7wOmd2x81.0gy7dvUpvwRpIttIILN3RxiiaLl.OB2",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Claim", b =>
                {
                    b.HasOne("PROG6212_CMCS.Server.Models.Lecturer", "Lecturer")
                        .WithMany("Claims")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.ClaimApproval", b =>
                {
                    b.HasOne("PROG6212_CMCS.Server.Models.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PROG6212_CMCS.Server.Models.Claim", "Claim")
                        .WithMany("Approvals")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Lecturer", b =>
                {
                    b.HasOne("PROG6212_CMCS.Server.Models.User", "User")
                        .WithOne("LecturerProfile")
                        .HasForeignKey("PROG6212_CMCS.Server.Models.Lecturer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.SupportingDocument", b =>
                {
                    b.HasOne("PROG6212_CMCS.Server.Models.Claim", "Claim")
                        .WithMany("Documents")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.User", b =>
                {
                    b.HasOne("PROG6212_CMCS.Server.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Claim", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Lecturer", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PROG6212_CMCS.Server.Models.User", b =>
                {
                    b.Navigation("LecturerProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
